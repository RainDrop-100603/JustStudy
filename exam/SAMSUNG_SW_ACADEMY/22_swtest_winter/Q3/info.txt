시간 : 10개 테스트케이스를 합쳐서 C/C++의 경우 1초 / Java의 경우 2초
메모리 : 힙, 정적 메모리 합쳐서 256MB 이내, 스택 메모리 1MB 이내

1차제출 
언어: C++
메모리: 13,968
시간: 780ms
코드길이: 5,420B
결과: Pass


전략
저인망 휴리스틱
    현재 찾지못한 가장 작은 전함의 크기를 기준으로 찾는다.
    상단->우측 순으로 확인한다.
        현재 블록에서 상단으로 전함을 넣을 수 있다면, 현재 블록을 체크한다.
        현재 블록에서 우측으로 전함을 넣을 수 있다면, 전함을 우측으로 놓았을 경우의 끝 블록을 체크한다.
    전함을 찾았을 경우-> 상단/하단/우측/좌측 순서대로 체크한다.
        추가적인 전함을 찾았을 경우 -> 기존의 찾던 전함을 찾고 다음 전함을 찾는다. stack을 이용할 수 있다.


예측
    앞으로 나올 수 있는 전함의 위치를 휴리스틱으로 예측 가능하다. -> 다소 까다롭긴 할듯
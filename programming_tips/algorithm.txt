algorithm tips

//https://www.youtube.com/watch?v=x7STjpcKZP8 
//사회복무요원 교육 

조합문제
  제약 충족 문제 (Constraint Satisfaction Problem) : 특정한 제약에 해당하는 답을 찾는 문제
      스도쿠, n-queen등 
    아래 두 조건을 만족하면 대부분 빠르게 실행된다.
      제약 전파(Constarint Propagation)
        답의 일부를 생성한 뒤에, 문제의 제약을 이용하여 얻을 수 있는 힌트를 찾아내는것
          답의 일부를 생성하면, 다른 조각의 답을 알게 되는것: 스도쿠를 떠올려보자
          혹은 생성한 답이 정답이 아니라는 것을 알게 되는것도 제약전파이다.
      채울 순서 정하기: 변수 순서 + 값 순서(Variable ordering + Value ordering)
        카쿠로, 스도쿠에서 빈공간이 적은 line부터 해결하는 것 
  algospot 444p
    TSP, Sudoku 문제의 강력한 해결법 
    http://norvig.com/sudoku.html
      
결정 문제(Decision Problem)
  특정 조건에 대해 예 혹은 아니오의 답만 나오는 문제
  최적화 문제를 결정 문제로 바꾸어 해결하는 방법이 존재한다.
    결정문제의 난이도는 최적화 문제보다 쉽거나 같다.

이분법 주의사항
  13.2절의 내용을 보고 더 공부하자
    450p 이분법의 함정을 보면,탐색의 범위가 유한한(idx를 이용한 이분법)은 수치적 안정성을 잃어버릴 수 있다.
      참을 반환해야하는 x가 계산오류로 거짓을 반환한다면, 범위가 유한한 이분법은 무한한 이분법에 비해 오차가 커지게 된다.
  이분법의 기준은 value일 수도, idx일 수도, 다른 어떤 기준이 될 수도 있다.
  변수의 개수가 무한할때와 유한할때의 일반적인 작동방식이 다르다.
    유한할 때: 조건과의 오차가 가장 작은 변수를 찾아내면 된다.
    무한할 때: 조건과의 오차가 특정기준 이하인 변수를 찾아내면 된다.
  기저를 잘못 설정하면 무한루프에 빠질 수 있다.
    일반적인 예시인 [left,right) 범위에서 mid=(left+right)/2를 변수로 갖는 이분법의 경우
      left==right와 left==right-1 모두 기저가 되어야 한다.
      left==mid와 같이 사용할 수도 있다. 
  
feedback loop

=====목차=====
매일 할 일 
How to feedback?
진로에 대한 공부/탐색
    frontend
    backend
    앱개발자
    etc
    frontend vs backend vs 앱개발자
==============


=====매일 할 일===== 
    알고리즘 한 단원 이상 나가기 or 4시간 이상 공부 
    진로에 대한 공부/탐색 1시간 


=====How to feedback?=====
    공부한 것 한 눈에 알아볼 수 있도록, 엑셀에 정리 
    한 것에 대한 feedback 필요 


=====진로에 대한 공부/탐색=====
--frontend 개발자, backend 개발자, backend 엔지니어 
    frontend는 유저에게 보이는 부분을 개발하는 사람
    backend 개발자는 data를 관리하고, 주고받고 등등 보이지 않는 부분을 개발하는 사람 
    backend 엔지니어는 실제로 프로그램을 굴리는 서버를 개발하고 유지/보수하는 사람? 
        linux등의 지식이 필요하다.
    나의 고민
        frontend가 내가 잘 할 수 있는 분야가 맞을까?
        알고리즘 등은 backend에서 더 잘 맞는 분야가 아닐까?
--frontend
    html, css, js base 
    기술의 변화가 아주 빠르다.
--backend
    django, python, ruby, etc...
    기술의 변화가 상대적으로 느리다. 
--앱개발자
--etc
--frontend vs backend vs 앱개발자


=====1인 개발이 망하는 이유=====
--1인 개발의 정의 
    다양한 종류의 1인개발이 있으므로, 여기서 정의하는 것으로 한정한다.
    side project, 부업 정도로 하는 개발 
    진입장벽 낮음 
    기술력 평범
    목적 수익창출 
    팀원 없음, 잘되면 나중에 생각 
--사업의 영역 
    개발자의 능력은 개발의 기술 
    돈을 버는것은 비즈니스능력, 마케팅능력, 인싸력, 미적감각
    즉, 요구되는 영역이 다르다. 
    비즈니스적 문제 
        타겟을 정의하지 않고, 시장을 확인하지 않고 개발한다.
    디자인 문제 
        기능만 구현되고 디자인적 완성도가 낮다. 
    마케팅 문제 
        개발자가 마케팅할 능력이 없다.
        어느정도 유저수가 있어도, 이후 확장해야할 단계에서 힘들어짐 
    착각
        비중
            비즈니스에서 개발은 일부에 불과하다.
        단계
            사업모델 단계는 ~ 사업성평가-전략수립-개발 ~  등 다양한 단계가 있다.
            개발자가 아는것은 개발의 대한 단계일 뿐이다. (그 중에서도 기능구현에 치중됨)
            개발 외적인 것에 대한 공부도 필요 
--실수들 
    플랫폼욕심
        플랫폼이 되기까지 마케팅, 영업 등 투자가 필요하다.
    비현실적은 비즈니스 사이즈
        side project에 걸맞는 size 필요 
    검증되자 않은 BM(business model: 돈 버는 모델)
        증명된 BM을 사용하되 차별성을 가져야한다. 

        
=====web frontend=====
    가장 돈을 적게번다.
    logic에는 관여하지 않고 디자인만 관여하는 경우도 많다.
    web publisher 라고 묶어 부르기도 한다.
    진입 장벽이 낮다 but 깊이가 있다.